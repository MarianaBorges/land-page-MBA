.py-base {
  padding-block: var(--py-base);
}

.py-lg {
  padding-block: var(--py-lg);
}

.py-xl {
  padding-block: var(--py-xl);
}

.py-lg {
  padding-block: var(--py-lg);
}

.px-lg {
  padding-inline: var(--px-lg);
}

.container {
  --max-width: 375px;
  /* aqui criamos o componente com um tamanho padrão descontando as margens 
     a função min retorna o valor que o cantainer deve ter já contemplando 
     o valor de margem.
     min(tamanho esperado da tela, tamanho real do dispositivo - duas vezes
     o valor de uma margem)
  */
  width: min(var(--max-width), 100% - var(--px-lg) * 2);
  margin-inline: auto;
}

.desktop-only {
  display: none;
}

.even-columns {
  display: grid;
  gap: 1rem;
}

@media (width >= 80em) {
  .container {
    --max-width: 80em;
  }

  .desktop-only {
    display: initial;
  }

  .even-columns {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
  
}